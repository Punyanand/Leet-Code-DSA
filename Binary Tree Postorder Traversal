class Solution:
    def postorderTraversal(self, root):
        if not root:
            return []
        
        stack, result = [root], []
        while stack:
            node = stack.pop()
            result.append(node.val)
            if node.left:
                stack.append(node.left)  # Push left child
            if node.right:
                stack.append(node.right)  # Push right child
                
        return result[::-1]  # Reverse the result for postorder
